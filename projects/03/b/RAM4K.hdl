// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in=load,sel=address[9..11],a=reg1,b=reg2,c=reg3,d=reg4,e=reg5,f=reg6,g=reg7,h=reg8);
	
    RAM512(in=in,load=reg1,address=address[0..8],out=reg1out);
	RAM512(in=in,load=reg2,address=address[0..8],out=reg2out);
	RAM512(in=in,load=reg3,address=address[0..8],out=reg3out);
	RAM512(in=in,load=reg4,address=address[0..8],out=reg4out);
	RAM512(in=in,load=reg5,address=address[0..8],out=reg5out);
	RAM512(in=in,load=reg6,address=address[0..8],out=reg6out);
	RAM512(in=in,load=reg7,address=address[0..8],out=reg7out);
	RAM512(in=in,load=reg8,address=address[0..8],out=reg8out);
	
	Mux8Way16(a=reg1out,b=reg2out,c=reg3out,d=reg4out,e=reg5out,f=reg6out,g=reg7out,h=reg8out,sel=address[9..11],out=out);
}